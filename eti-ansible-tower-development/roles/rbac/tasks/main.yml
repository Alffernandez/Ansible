---
# RBAC 

- name: Ensure Organizations exist # These need to be created as the AD configuration will only create them on user map
  ansible.tower.tower_organization:
    name: "{{ item[0].split('_')[0] }}" 
    tower_username: admin
    tower_password: "{{ ansible_tower_admin }}"
    tower_host: "https://{{inventory_hostname}}/"
    tower_verify_ssl: False
  with_nested: 
    - "{{(ansible_settings_rbac['AUTH_LDAP_TEAM_MAP']).keys()|list }}"
    - [project_admin, inventory_admin, credential_admin, workflow_admin, notification_admin, job_template_admin ]

- name: Ensure Teams exist
  ansible.tower.tower_team:
    name: "{{ item[0] }}"
    organization: "{{ item[0].split('_')[0] }}" 
    tower_username: admin
    tower_password: "{{ ansible_tower_admin }}"
    tower_host: "https://{{inventory_hostname}}/"
    tower_verify_ssl: False
  with_nested: 
    - "{{(ansible_settings_rbac['AUTH_LDAP_TEAM_MAP']).keys()|list }}"
    - [project_admin, inventory_admin, credential_admin, workflow_admin, notification_admin, job_template_admin ]

# Currently ADMIN groups do not have admin access in Prod to change that update this task's when statement
- name: Configure admin for ADMIN team permissions on main organizations for dev
  ansible.tower.tower_role:
    team: "{{ item[0] }}"
    organization: "{{ item[0].split('_')[0] }}" 
    role: "{{ item[1]}}"
    tower_username: admin
    tower_password: "{{ ansible_tower_admin }}"
    tower_host: "https://{{inventory_hostname}}/"
    tower_verify_ssl: False
  with_nested: 
    - "{{(ansible_settings_rbac['AUTH_LDAP_TEAM_MAP']).keys()|select('search', 'ADMIN')|list }}"
    - [project_admin, inventory_admin, credential_admin, workflow_admin, notification_admin, job_template_admin ]
  when: TIER in ( "dev" , "c_b" ) 

- name: Configure default USER team permissions on main organizations
  ansible.tower.tower_role:
    team: "{{ item }}"
    organization: "{{ item.split('_')[0] }}" 
    role: execute 
    tower_username: admin
    tower_password: "{{ ansible_tower_admin }}"
    tower_host: "https://{{inventory_hostname}}/"
    tower_verify_ssl: False
  loop: "{{(ansible_settings_rbac['AUTH_LDAP_TEAM_MAP']).keys()|list }}"

- name: Configure Notification admin for ADMIN team permissions on main organizations
  ansible.tower.tower_role:
    team: "{{ item }}"
    organization: "{{ item.split('_')[0] }}" 
    role: notification_admin
    tower_username: admin
    tower_password: "{{ ansible_tower_admin }}"
    tower_host: "https://{{inventory_hostname}}/"
    tower_verify_ssl: False
  loop: "{{(ansible_settings_rbac['AUTH_LDAP_TEAM_MAP']).keys()|select('search', 'ADMIN')|list }}"
  when: TIER == "prd"  # This is only required in Prod as Dev admin groups have admin full admin rights on organizations


- name: Configure default USER/ADMIN team permissions on SCHRODERS organization
  ansible.tower.tower_role:
    team: "{{ item }}"
    organization: "SCHRODERS"
    role: execute 
    tower_username: admin
    tower_password: "{{ ansible_tower_admin }}"
    tower_host: "https://{{inventory_hostname}}/"
    tower_verify_ssl: False
  loop: "{{(ansible_settings_rbac['AUTH_LDAP_TEAM_MAP']).keys()|list }}"
  loop_control:
    label: "{{ item }}"  
  

- name: Configure Ansible Tower roles
  ansible.tower.tower_role:
    user: "{{ item.value.user|default(omit) }}" # Source
    team: "{{ item.value.team|default(omit) }}" # Source 
    project: "{{ item.value.project|default(omit) }}"
    organization: "{{ item.value.organization|default(omit) }}"
    job_template: "{{ item.value.job_template|default(omit) }}"
    inventory: "{{ item.value.inventory|default(omit) }}"
    credential: "{{ item.value.credential|default(omit) }}"
    target_team: "{{ item.value.target_team|default(omit) }}"
    role: "{{ item.value.role }}"
    state: present
    tower_username: admin
    tower_password: "{{ ansible_tower_admin }}"
    tower_host: "https://{{inventory_hostname}}/"
    tower_verify_ssl: False
  loop: "{{ ansible_tower_config[TIER].roles|dict2items }}" 
  loop_control:
    label: "{{ item.value.role }}"

