---
# Credentials 

- name: Custom credential types
  debug: 
    var: ansible_tower_config[TIER].custom_credential_types.keys()
    verbosity: 1 

- name: Deploy credential types from ansible_tower group vars
  ansible.tower.tower_credential_type:
    name: "{{ item.key }}"
    description: "{{ item.value.description|default(omit) }}"
    injectors: "{{ item.value.injector }}"
    inputs: "{{ item.value.input }}"
    kind: cloud
    tower_username: admin
    tower_password: "{{ ansible_tower_admin }}"
    tower_host: "https://{{inventory_hostname}}/"
    tower_verify_ssl: False          
  loop: "{{ ansible_tower_config[TIER].custom_credential_types|dict2items }}" 
  loop_control:
    label: "{{ item.key }}"

- name: Deploying the following credentials
  debug: 
    var: ansible_tower_config[TIER].credentials.keys()
    verbosity: 0 

- name: Deploy Ansible Tower credentials
  ansible.tower.tower_credential: "{{ tower_module_defaults | combine(item.value) | combine ({ 'name' : item.key}) }}"
  loop: "{{ ansible_tower_config[TIER].credentials|dict2items  }}" 
  no_log: True
  register:  output 
  changed_when: False # No point as it will always show as changed
  ignore_errors: True 
  loop_control:
    label:  "{{ item.key }}"  

- name: Check if any credentials have failed
  set_fact:
    failed_tasks: "{{ failed_tasks|default([]) + [index] }}"
  loop: "{{ output.results }}"
  loop_control:
    index_var: index
    label: "{{ item.item.key }}"
  when: item.failed

- name: Fail if credentials have errors
  fail:
    msg: |
      message: "{{ output.results[item].msg }}"
      result:
      {{ (output.results[item].response)|default() }}
  when: output.results[item].failed
  loop: "{{ failed_tasks|default([]) }}"
